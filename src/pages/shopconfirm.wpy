<!--确认订单-->
<template>
<view class="order-confirm-container">
  <view class="order_info">
    <view class="block">
      <view class="left">商品名称</view>
      <view class="right">{{book.title}}</view>
    </view>
    <view class="block">
      <view class="left important">收件人姓名</view>
      <view class="right input_box">
        <input bindinput="bindNameInput" placeholder="请输入收件人姓名" auto-focus />
      </view>
    </view>
    <view class="block">
      <view class="left important">收件人电话</view>
      <view class="right input_box">
        <input bindinput="bindPhoneInput" placeholder="请输入收件人电话号码" />
      </view>
    </view>
    <view class="block">
      <view class="left important">收件人地址</view>
      <view class="right input_box">
        <input bindinput="bindAddressInput" placeholder="请输入收件人地址" />
      </view>
    </view>
    <view class="block">
      <view class="left">我的研值</view>
      <view class="right my-yanzhi">
        {{user.yanzhi}}
      </view>
    </view>
    <view class="spacing"></view>
    <view class="spacing"></view>
    <view class="block">
      <view class="left tongji">商品总价</view>
      <view>
        <view class="right price" wx:if="{{youhuijuan>0}}">研值:￥{{price}}-积分:￥{{youhuijuan}}</view>
        <view class="right price">研值:{{book.price || 2000}}</view>
      </view>
    </view>

    <view class="buyBtn">
      <button class="weui-btn" type="primary" @tap="submitBuy">提交订单</button>
    </view>
  </view>
</view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api';
import tip from '@/utils/tip';
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  ADDRESS_ID
} from '@/utils/constant';
export default class ComfireOrder extends wepy.page {
  config = {
    navigationBarTitleText: '确认兑换',
  }
  components = {}

  data = {
    book: {},
    user: {},
    buyName: '',
    buyPhone: '',
    buyAddress: ''
  }

  async onLoad(option) {
    const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    const openId = userSpecialInfo.openid;
    const user = await api.getUser({
      query: {
        openID: openId
      }
    })
    const {
      id
    } = option;
    const {
      data
    } = await api.getBooks({
      query: {
        id
      }
    })
    this.book = data;
    this.user = user.data;
    this.$apply();
  }

  methods = {
    bindNameInput(e) {
      const value = e.detail.value;
      this.buyName = value;
      this.$apply();
    },

    bindPhoneInput(e) {
      const value = e.detail.value;
      this.buyPhone = value;
      this.$apply();
    },

    bindAddressInput(e) {
      const value = e.detail.value;
      this.buyAddress = value;
      this.$apply();
    },

    async submitBuy() {
      if (this.buyName == '' || !this.buyName) {
        tip.error('收件人姓名不能为空');
        return;
      }

      if (this.buyPhone == '' || !this.buyPhone) {
        tip.error('收件人电话不能为空');
        return;
      }

      if (this.buyAddress == '' || !this.buyAddress) {
        tip.error('收件人地址不能为空');
        return;
      }

      try {
        await tip.confirm('是否确认兑换？');
        const buyObject = {};
        const userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
        buyObject.user = userSpecialInfo.openid;
        buyObject.name = this.buyName;
        buyObject.phone  = this.buyPhone;
        buyObject.address = this.buyAddress;
        buyObject.total = this.book.price;
        buyObject.title = this.book.title;
        buyObject.pic = this.book.pic;
        await api.buyBook({
          query: buyObject,
          method: 'POST'
        })
        tip.success('恭喜您兑换成功！')
        wepy.navigateTo({ url: '/pages/buyrecored' });
      } catch (err) {
        console.log(err);
      }
    }
  }

}
</script>

<style lang="scss">
.order_info {
  .block {
    display: flex;
    justify-content: space-between;
    height: 91rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    border-bottom: 1px solid #efefef;
    background: #fff;
    .txt {
      font-size: 32rpx;
    }
    .important {
      color: #D3AA7B !important;
    }
    .left {
      color: #000;
    }
    .right {
      color: #9a9a9a;
      text-align: right;
    }
    .my-yanzhi {
      color: #ea4a3a;
      font-size: 32rpx;
    }
    .price {
      color: #ea4a3a;
      font-size: 32rpx;
    }
    .tongji {
      font-size: 32rpx;
    }
    .input_box {
      flex: 1;
      margin-left: 20rpx;
    }
    .total_jf {
      font-size: 32rpx;
    }
  }
}

.buyBtn {
  margin: 30rpx 20rpx;
}
</style>
